---
variant: fcos
version: 1.1.0
storage:
  directories:
    - path: /mnt/data/diaspora/backups
      mode: 0755
    - path: /mnt/data/diaspora/public/assets
      mode: 0755
      user:
        id: 1000
      group:
        id: 1000
    - path: /mnt/data/diaspora/public/uploads
      mode: 0755
      user:
        id: 1000
      group:
        id: 1000
    - path: /mnt/data/postgresql/data
      mode: 0755
    - path: /mnt/data/postgresql/backups
      mode: 0755
    - path: /mnt/data/redis
      mode: 0755
  files:
    - path: /var/local/lib/diaspora/assets-precompile.sh
      mode: 0755
      user:
        id: 1000
      group:
        id: 1000
      overwrite: true
      contents:
        inline: |
          #!/bin/bash --login
          cd diaspora
          mkdir -p tmp/pids
          mkdir -p tmp/cache
          export RAILS_ENV=production
          bin/rake assets:precompile
    - path: /usr/local/bin/install-diaspora.sh
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          SERVICES="postgresql redis diaspora nginx exim4"

          echo "Precompiling assets. This might take some while"
          podman run -it --rm \
                --pull always \
                -v /var/local/lib/diaspora/assets-precompile.sh:/home/diaspora/startup.sh:Z \
                -v /mnt/data/diaspora/public/assets:/home/diaspora/diaspora/public/assets:Z \
                -v /mnt/data/diaspora/public/uploads:/home/diaspora/diaspora/public/uploads:Z \
                -v /var/local/etc/diaspora/diaspora.yml:/home/diaspora/diaspora/config/diaspora.yml:Z \
                -v /var/local/etc/diaspora/database.yml:/home/diaspora/diaspora/config/database.yml:Z \
                docker.io/koehn/diaspora
          echo "Assets precompilation done"

          for s in $${SERVICES}; do
              if podman container exists $${s}; then
                  echo -n "stopping and deleting $${s}... "
                  systemctl stop container-$${s}
                  podman rm -f $${s}
                  rm -f /etc/systemd/system/container-$${s}
              fi
          done
          systemctl daemon-reload

          podman create \
                --pull always \
                --name postgresql \
                --ip ${postgresql_ip} \
                -e POSTGRES_USER=diaspora \
                -e POSTGRES_PASSWORD='${postgres_password}' \
                -e POSTGRES_DB=diaspora_production \
                -v /mnt/data/postgresql/data:/var/lib/postgresql/data:Z \
                -v /mnt/data/postgresql/backups:/var/local/postgresql-backups:z \
                docker.io/postgres:10-alpine
          podman create \
                --pull always \
                --name redis \
                --ip ${redis_ip} \
                -v /mnt/data/redis:/data:Z \
                docker.io/redis redis-server --appendonly yes
          podman create \
                --pull always \
                --name diaspora \
                --ip ${diaspora_ip} \
                -v /mnt/data/diaspora/public/assets:/home/diaspora/diaspora/public/assets:z \
                -v /mnt/data/diaspora/public/uploads:/home/diaspora/diaspora/public/uploads:z \
                -v /var/local/etc/diaspora/diaspora.yml:/home/diaspora/diaspora/config/diaspora.yml:Z \
                -v /var/local/etc/diaspora/database.yml:/home/diaspora/diaspora/config/database.yml:Z \
                docker.io/koehn/diaspora
          podman create \
                --pull always \
                --name nginx \
                --ip ${nginx_ip} \
                -p 80:80/tcp \
                -p 443:443/tcp \
                -v /mnt/data/letsencrypt/etc/letsencrypt:/etc/letsencrypt:z \
                -v /mnt/data/diaspora/public:/var/local/diaspora-public:z \
                -v /var/local/etc/nginx/conf.d:/etc/nginx/conf.d:Z \
                docker.io/nginx:stable-alpine
          podman create \
                --pull always \
                --name exim4 \
                --ip ${smtpd_ip} \
                -e MAILNAME=${diaspora_server_name} \
                -e DISABLE_IPV6=1 \
                docker.io/carlosedp/docker-smtp

          PWD=$(pwd)
          cd /etc/systemd/system/
          cd /etc/systemd/system/
          for s in $${SERVICES}; do
              podman generate systemd -fn $${s}
          done
          systemctl daemon-reload
          for s in $${SERVICES}; do
              systemctl reenable container-$${s}
              systemctl start container-$${s}
          done

          mkdir -p /var/log/provision-done
          touch /var/log/provision-done/install-diaspora
systemd:
  units:
    - name: install-diaspora.service
      enabled: true
      contents: |
        [Unit]
        Description=Install diaspora services pod
        After=network-online.target
        Wants=network-online.target
        Before=systemd-user-sessions.service
        ConditionPathExists=!/var/log/provision-done/install-diaspora
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/usr/local/bin/install-diaspora.sh
        StandardOutput=kmsg+console
        StandardError=kmsg+console
        [Install]
        WantedBy=multi-user.target
...