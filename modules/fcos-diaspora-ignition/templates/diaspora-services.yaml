---
variant: fcos
version: 1.1.0
storage:
  directories:
    - path: /mnt/data/diaspora/backups
      mode: 0755
    - path: /mnt/data/diaspora/public/assets
      mode: 0755
      user:
        id: 1000
      group:
        id: 1000
    - path: /mnt/data/diaspora/public/uploads
      mode: 0755
      user:
        id: 1000
      group:
        id: 1000
    - path: /mnt/data/diaspora/log
      mode: 0755
      user:
        id: 1000
      group:
        id: 1000
    - path: /mnt/data/postgresql/data
      mode: 0755
    - path: /mnt/data/postgresql/backups
      mode: 0755
    - path: /mnt/data/redis
      mode: 0755
  files:
    - path: /var/local/lib/diaspora/assets-precompile.sh
      mode: 0755
      user:
        id: 1000
      group:
        id: 1000
      overwrite: true
      contents:
        inline: |
          #!/bin/bash --login
          cd diaspora
          mkdir -p tmp/pids
          mkdir -p tmp/cache
          export RAILS_ENV=production
          bin/rake assets:precompile
    - path: /usr/local/libexec/install-commons.sh
      mode: 0644
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          stop_and_remove_service() {
              local _service
              _service=$${1}
              if podman container exists $${_service}; then
                  echo -n "stopping and deleting $${_service}... "
                  systemctl stop container-$${_service}
                  podman rm -f $${_service}
                  rm -f /etc/systemd/system/container-$${_service}
              fi
              systemctl daemon-reload
          }

          create_and_start_service() {
              local _service _pwd
              _service=$${1}

              _pwd=$(pwd)
              cd /etc/systemd/system/
              podman generate systemd -fn $${_service}
              systemctl daemon-reload
              systemctl reenable container-$${_service}
              systemctl start container-$${_service}
              cd $${_pwd}
          }
    - path: /usr/local/libexec/install-postgresql.sh
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          . /usr/local/libexec/install-commons.sh
          SERVICE=postgresql
          stop_and_remove_service $${SERVICE}
          podman create \
               --pull always \
               --name $${SERVICE} \
               --ip ${postgresql_ip} \
               -e POSTGRES_USER=diaspora \
               -e POSTGRES_PASSWORD='${postgres_password}' \
               -e POSTGRES_DB=diaspora_production \
               -v /mnt/data/postgresql/data:/var/lib/postgresql/data:Z \
               -v /mnt/data/postgresql/backups:/var/local/postgresql-backups:z \
               docker.io/postgres:10-alpine
          create_and_start_service $${SERVICE}
    - path: /usr/local/libexec/install-redis.sh
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          . /usr/local/libexec/install-commons.sh
          SERVICE=redis
          stop_and_remove_service $${SERVICE}
          podman create \
                --pull always \
                --name $${SERVICE} \
                --ip ${redis_ip} \
                -v /mnt/data/redis:/data:Z \
                docker.io/redis:${redis_version} redis-server --appendonly yes
          create_and_start_service $${SERVICE}
    - path: /usr/local/libexec/install-exim4.sh
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          . /usr/local/libexec/install-commons.sh
          SERVICE=exim4
          stop_and_remove_service $${SERVICE}
          podman create \
               --pull always \
               --name $${SERVICE} \
               --net host \
               -v /var/local/etc/exim4/entrypoint-local.sh:/bin/entrypoint-local.sh:Z \
               --entrypoint '/bin/entrypoint-local.sh' \
               -e MAILNAME=${diaspora_server_name} \
               -e BIND_IP=10.88.0.1 \
               -e RELAY_NETWORKS="10.88.0.0/16" \
               -e DISABLE_IPV6=1 \
               docker.io/carlosedp/docker-smtp
          create_and_start_service $${SERVICE}
    - path: /usr/local/libexec/install-diaspora.sh
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          . /usr/local/libexec/install-commons.sh
          SERVICE=diaspora
          stop_and_remove_service $${SERVICE}
          echo "Precompiling assets. This might take some while"
          podman run -it --rm \
               --pull always \
               -v /var/local/lib/diaspora/assets-precompile.sh:/home/diaspora/startup.sh:Z \
               -v /mnt/data/diaspora/public/assets:/home/diaspora/diaspora/public/assets:Z \
               -v /mnt/data/diaspora/public/uploads:/home/diaspora/diaspora/public/uploads:Z \
               -v /var/local/etc/diaspora/diaspora.yml:/home/diaspora/diaspora/config/diaspora.yml:Z \
               -v /var/local/etc/diaspora/database.yml:/home/diaspora/diaspora/config/database.yml:Z \
               docker.io/koehn/diaspora:${diaspora_version}
          echo "Assets precompilation done"
          echo "Creating diaspora container..."
          podman create \
                --pull always \
                --name $${SERVICE} \
                --ip ${diaspora_ip} \
                -v /mnt/data/diaspora/public/assets:/home/diaspora/diaspora/public/assets:z \
                -v /mnt/data/diaspora/public/uploads:/home/diaspora/diaspora/public/uploads:z \
                -v /var/local/etc/diaspora/diaspora.yml:/home/diaspora/diaspora/config/diaspora.yml:Z \
                -v /var/local/etc/diaspora/database.yml:/home/diaspora/diaspora/config/database.yml:Z \
                -v /mnt/data/diaspora/log:/home/diaspora/diaspora/log:Z \
                docker.io/koehn/diaspora:${diaspora_version}
          create_and_start_service $${SERVICE}
    - path: /usr/local/libexec/install-nginx.sh
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          . /usr/local/libexec/install-commons.sh
          SERVICE=nginx
          stop_and_remove_service $${SERVICE}
          podman create \
                --pull always \
                --name $${SERVICE} \
                --ip ${nginx_ip} \
                -p 80:80/tcp \
                -p 443:443/tcp \
                -v /mnt/data/letsencrypt/etc/letsencrypt:/etc/letsencrypt:z \
                -v /mnt/data/diaspora/public:/var/local/diaspora-public:z \
                -v /var/local/etc/nginx/conf.d:/etc/nginx/conf.d:Z \
                docker.io/nginx:${nginx_version}
          create_and_start_service $${SERVICE}
    - path: /usr/local/bin/install-diaspora.sh
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -e
          for s in postgresql redis exim4 diaspora nginx; do
              /usr/local/libexec/install-$${s}.sh &
          done
          mkdir -p /var/log/provision-done
          touch /var/log/provision-done/install-diaspora
systemd:
  units:
    - name: install-diaspora.service
      enabled: true
      contents: |
        [Unit]
        Description=Install diaspora services pod
        After=network-online.target
        Wants=network-online.target
        Before=systemd-user-sessions.service
        ConditionPathExists=!/var/log/provision-done/install-diaspora
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/usr/local/bin/install-diaspora.sh
        StandardOutput=kmsg+console
        StandardError=kmsg+console
        [Install]
        WantedBy=multi-user.target
...